//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1591

using System;
using System.Collections.Generic;
using System.Linq;

using LinqToDB;
using LinqToDB.Mapping;

using NpgsqlTypes;

namespace AspNetCoreBackend.Entities
{
	/// <summary>
	/// Database       : aspnetcorebackend
	/// Data Source    : tcp://localhost:5432
	/// Server Version : 9.6.2
	/// </summary>
	public partial class LinqToDbDataContext : LinqToDB.Data.DataConnection
	{
		public ITable<Comuna>        Comunas          { get { return this.GetTable<Comuna>(); } }
		public ITable<PerfilUsuario> PerfilesUsuarios { get { return this.GetTable<PerfilUsuario>(); } }
		public ITable<Persona>       Personas         { get { return this.GetTable<Persona>(); } }
		public ITable<Provincia>     Provincias       { get { return this.GetTable<Provincia>(); } }
		public ITable<Region>        Regiones         { get { return this.GetTable<Region>(); } }
		public ITable<Usuario>       Usuarios         { get { return this.GetTable<Usuario>(); } }

		partial void InitMappingSchema()
		{
		}

		public LinqToDbDataContext()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public LinqToDbDataContext(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext  ();
		partial void InitMappingSchema();
	}

	[Table("comunas")]
	public partial class Comuna : AspNetCoreBackend.Entities.IBaseEntity
	{
		[Column("id_comuna"),    PrimaryKey,  NotNull] public int    IdComuna    { get; set; } // integer
		[Column("id_provincia"),    Nullable         ] public int?   IdProvincia { get; set; } // integer
		[Column("nombre"),                    NotNull] public string Nombre      { get; set; } // character varying(100)

		#region Associations

		/// <summary>
		/// fk_persona_reference_comuna_BackReference
		/// </summary>
		[Association(ThisKey="IdComuna", OtherKey="IdComuna", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Persona> Fkpersonareferencecomunas { get; set; }

		/// <summary>
		/// fk_comunas_reference_provinci
		/// </summary>
		[Association(ThisKey="IdProvincia", OtherKey="IdProvincia", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="fk_comunas_reference_provinci", BackReferenceName="Fkcomunasreferenceprovincis")]
		public Provincia Fkreferenceprovinci { get; set; }

		#endregion
	}

	[Table("perfiles_usuarios")]
	public partial class PerfilUsuario : AspNetCoreBackend.Entities.IBaseEntity
	{
		[Column("id_perfil_usuario"), PrimaryKey, NotNull] public int    IdPerfilUsuario { get; set; } // integer
		[Column("nombre"),                        NotNull] public string Nombre          { get; set; } // character varying(100)

		#region Associations

		/// <summary>
		/// fk_usuarios_reference_perfil_u_BackReference
		/// </summary>
		[Association(ThisKey="IdPerfilUsuario", OtherKey="IdPerfilUsuario", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Usuario> Fkusuariosreferenceperfilus { get; set; }

		#endregion
	}

	[Table("personas")]
	public partial class Persona : AspNetCoreBackend.Entities.IBaseEntity
	{
		[Column("id_persona"),       PrimaryKey,  Identity] public long        IdPersona       { get; set; } // bigint
		[Column("id_comuna"),           Nullable          ] public int?        IdComuna        { get; set; } // integer
		[Column("run"),                 Nullable          ] public int?        Run             { get; set; } // integer
		[Column("nombres"),          NotNull              ] public string      Nombres         { get; set; } // character varying(255)
		[Column("apellido_paterno"), NotNull              ] public string      ApellidoPaterno { get; set; } // character varying(255)
		[Column("apellido_materno"),    Nullable          ] public string      ApellidoMaterno { get; set; } // character varying(255)
		[Column("fechanacimiento"),     Nullable          ] public NpgsqlDate? Fechanacimiento { get; set; } // date
		[Column("telefono"),            Nullable          ] public string      Telefono        { get; set; } // character varying(20)
		[Column("email"),            NotNull              ] public string      Email           { get; set; } // character varying(100)

		#region Associations

		/// <summary>
		/// fk_persona_reference_comuna
		/// </summary>
		[Association(ThisKey="IdComuna", OtherKey="IdComuna", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="fk_persona_reference_comuna", BackReferenceName="Fkpersonareferencecomunas")]
		public Comuna Fkpersonareferencecomuna { get; set; }

		/// <summary>
		/// fk_usuarios_reference_persona_BackReference
		/// </summary>
		[Association(ThisKey="IdPersona", OtherKey="IdPersona", CanBeNull=true, Relationship=Relationship.OneToOne, IsBackReference=true)]
		public Usuario Fkusuariosreferencepersona { get; set; }

		#endregion
	}

	[Table("provincias")]
	public partial class Provincia : AspNetCoreBackend.Entities.IBaseEntity
	{
		[Column("id_provincia"), PrimaryKey,  NotNull] public int    IdProvincia { get; set; } // integer
		[Column("id_region"),       Nullable         ] public int?   IdRegion    { get; set; } // integer
		[Column("nombre"),                    NotNull] public string Nombre      { get; set; } // character varying(100)

		#region Associations

		/// <summary>
		/// fk_comunas_reference_provinci_BackReference
		/// </summary>
		[Association(ThisKey="IdProvincia", OtherKey="IdProvincia", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Comuna> Fkcomunasreferenceprovincis { get; set; }

		/// <summary>
		/// fk_provinci_reference_region
		/// </summary>
		[Association(ThisKey="IdRegion", OtherKey="IdRegion", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="fk_provinci_reference_region", BackReferenceName="Fkprovincireferenceregions")]
		public Region Fkprovincireferenceregion { get; set; }

		#endregion
	}

	[Table("regiones")]
	public partial class Region : AspNetCoreBackend.Entities.IBaseEntity
	{
		[Column("id_region"), PrimaryKey, NotNull] public int    IdRegion { get; set; } // integer
		[Column("nombre"),                NotNull] public string Nombre   { get; set; } // character varying(100)

		#region Associations

		/// <summary>
		/// fk_provinci_reference_region_BackReference
		/// </summary>
		[Association(ThisKey="IdRegion", OtherKey="IdRegion", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Provincia> Fkprovincireferenceregions { get; set; }

		#endregion
	}

	[Table("usuarios")]
	public partial class Usuario : AspNetCoreBackend.Entities.IBaseEntity
	{
		[Column("id_persona"),        PrimaryKey,  NotNull] public long   IdPersona       { get; set; } // bigint
		[Column("id_perfil_usuario"),              NotNull] public int    IdPerfilUsuario { get; set; } // integer
		[Column("username"),                       NotNull] public string Username        { get; set; } // character varying(255)
		[Column("password"),             Nullable         ] public string Password        { get; set; } // character varying(500)
		[Column("habilitado"),                     NotNull] public bool   Habilitado      { get; set; } // boolean

		#region Associations

		/// <summary>
		/// fk_usuarios_reference_perfil_u
		/// </summary>
		[Association(ThisKey="IdPerfilUsuario", OtherKey="IdPerfilUsuario", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="fk_usuarios_reference_perfil_u", BackReferenceName="Fkusuariosreferenceperfilus")]
		public PerfilUsuario Fkreferenceperfilu { get; set; }

		/// <summary>
		/// fk_usuarios_reference_persona
		/// </summary>
		[Association(ThisKey="IdPersona", OtherKey="IdPersona", CanBeNull=false, Relationship=Relationship.OneToOne, KeyName="fk_usuarios_reference_persona", BackReferenceName="Fkusuariosreferencepersona")]
		public Persona Fkreferencepersona { get; set; }

		#endregion
	}

	public static partial class TableExtensions
	{
		public static Comuna Find(this ITable<Comuna> table, int IdComuna)
		{
			return table.FirstOrDefault(t =>
				t.IdComuna == IdComuna);
		}

		public static PerfilUsuario Find(this ITable<PerfilUsuario> table, int IdPerfilUsuario)
		{
			return table.FirstOrDefault(t =>
				t.IdPerfilUsuario == IdPerfilUsuario);
		}

		public static Persona Find(this ITable<Persona> table, long IdPersona)
		{
			return table.FirstOrDefault(t =>
				t.IdPersona == IdPersona);
		}

		public static Provincia Find(this ITable<Provincia> table, int IdProvincia)
		{
			return table.FirstOrDefault(t =>
				t.IdProvincia == IdProvincia);
		}

		public static Region Find(this ITable<Region> table, int IdRegion)
		{
			return table.FirstOrDefault(t =>
				t.IdRegion == IdRegion);
		}

		public static Usuario Find(this ITable<Usuario> table, long IdPersona)
		{
			return table.FirstOrDefault(t =>
				t.IdPersona == IdPersona);
		}
	}
}

#pragma warning restore 1591
